/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import javax.swing.ImageIcon;

/**
 *
 * @author ANALISE EM CURSO
 */
public class JDialogMensagem extends javax.swing.JDialog {

    private JDialogMensagem jDialogMensagem;
    //-----------------------------------------//
    //armazena a posição do mouse
    int xMouse;
    int yMouse;
    //-----------------------------------------//
    //resultado
    private String STATUS;
    private String ENTRADA; 
    //-----------------------------------------//
    private final String arquivoconexao = "sys/config.properties";
    //-----------------------------------------//
    /**
     * Creates new form JDialogMensagem
     */
    public JDialogMensagem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        //seta o titulo da janela
        setTitle("Mensagem");
        initComponents();
        lerconfiguracao();
        jBOK.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jBCancelar = new javax.swing.JButton();
        jBOK = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        imagem1 = new imagem.Imagem();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextEntrada = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setUndecorated(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });
        jBCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBCancelarKeyPressed(evt);
            }
        });

        jBOK.setText("OK");
        jBOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOKActionPerformed(evt);
            }
        });
        jBOK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBOKKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        imagem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens96/INFORMACAO.png"))); // NOI18N
        imagem1.setOpaque(false);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mensagem");
        jLabel1.setOpaque(true);
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("x");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setOpaque(true);
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        jTextEntrada.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextEntradaKeyPressed(evt);
            }
        });

        jScrollPane1.setBorder(null);
        jScrollPane1.setOpaque(false);

        jTextPane1.setEditable(false);
        jTextPane1.setBorder(null);
        jTextPane1.setFocusCycleRoot(false);
        jTextPane1.setFocusable(false);
        jScrollPane1.setViewportView(jTextPane1);

        jCheckBox1.setText("Não mostra mais alerta");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jCheckBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCheckBox1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagem1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextEntrada)
                    .addComponent(jScrollPane1)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imagem1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBOK, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBCancelar, jBOK});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBOK)
                    .addComponent(jBCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        // TODO add your handling code here:
        jLabel3.setBackground(Color.red);
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        // TODO add your handling code here:
        jLabel3.setBackground(Color.black);
    }//GEN-LAST:event_jLabel3MouseExited

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jBOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOKActionPerformed
        if ((jTextEntrada.isVisible()) && (jTextEntrada.getText().isEmpty())) {
            jTextEntrada.requestFocus();
        } else if ((jTextEntrada.isVisible()) && (!jTextEntrada.getText().isEmpty())) {
            setENTRADA(jTextEntrada.getText());
            setSTATUS("OK");
            dispose();
        } else {
            setSTATUS("OK");
            dispose();
        }
    }//GEN-LAST:event_jBOKActionPerformed

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        //pega a poseção do jframe
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        //seta a nova posição
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // pega a posição do mouse na label
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jBOKKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBOKKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setSTATUS("OK");
            dispose();
        }
        //Para Esquerda
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            if (jBCancelar.isVisible()) {
                jBCancelar.requestFocus();
            }
        }
        //Para cima
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            if (jTextEntrada.isVisible()) {
                jTextEntrada.requestFocus();
            } else if (jCheckBox1.isVisible()) {
                jCheckBox1.requestFocus();
            }

        }
    }//GEN-LAST:event_jBOKKeyPressed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        setSTATUS("CANCELAR");
        dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBCancelarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setSTATUS("CANCELAR");
            dispose();
        }
        //Para Direita
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            if (jBOK.isVisible()) {
                jBOK.requestFocus();
            }
        }
        //Para cima
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            if (jTextEntrada.isVisible()) {
                jTextEntrada.requestFocus();
            } else if (jCheckBox1.isVisible()) {
                jCheckBox1.requestFocus();
            }
        }
    }//GEN-LAST:event_jBCancelarKeyPressed

    private void jTextEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextEntradaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jTextEntrada.isVisible() && jTextEntrada.getText().isEmpty()) {
                jTextEntrada.requestFocus();
            } else if (jTextEntrada.isVisible() && !jTextEntrada.getText().isEmpty()) {
                setSTATUS("OK");
                setENTRADA(jTextEntrada.getText());
                dispose();
            }
        }
        //Para Baixo
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            if (jBOK.isVisible()) {
                jBOK.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextEntradaKeyPressed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.escreve();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBox1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setSTATUS("OK");
            escreve();
        }
        //Para Baixo
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            if (jBOK.isVisible()) {
                jBOK.requestFocus();
            }
        }
    }//GEN-LAST:event_jCheckBox1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogMensagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogMensagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogMensagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogMensagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogMensagem dialog = new JDialogMensagem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private imagem.Imagem imagem1;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBOK;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextEntrada;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    public void showMessage(String title, String message, String icone, String tipo) {
        jLabel1.setText(title);
        switch (tipo) {
            case "PADRAO":
                jScrollPane1.setSize(new Dimension(70, 392));
                jBOK.setVisible(true);
                jBOK.setText("OK");
                jBCancelar.setVisible(false);
                jBCancelar.setText("Cancelar");
                jCheckBox1.setVisible(false);
                jTextEntrada.setVisible(false);
                break;
            case "COMFIRMACAO":
                jScrollPane1.setSize(new Dimension(70, 392));
                jBOK.setVisible(true);
                jBOK.setText("OK");
                jBCancelar.setVisible(true);
                jBCancelar.setText("Cancelar");
                jCheckBox1.setVisible(false);
                jTextEntrada.setVisible(false);
                break;
            case "ALERTA":
                jScrollPane1.setSize(new Dimension(70, 392));
                jBOK.setVisible(true);
                jBOK.setText("OK");
                jBCancelar.setVisible(true);
                jBCancelar.setText("Cancelar");
                jCheckBox1.setVisible(true);
                jBOK.requestFocus();
                jTextEntrada.setVisible(false);
                break;
            case "ENTRADA":
                jScrollPane1.setSize(new Dimension(20, 392));
                jBOK.setVisible(true);
                jBOK.setText("OK");
                jBCancelar.setVisible(true);
                jBCancelar.setText("Cancelar");
                jCheckBox1.setVisible(false);
                jTextEntrada.setVisible(true);
                jTextEntrada.requestFocus();
                break;
        }
        //seta o icone
        switch (icone) {
            case "PADRAO":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/INFORMACAO.png")));
                break;
            case "INFORMACAO":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/INFORMACAO.png")));
                break;
            case "AVISO":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/AVISO.png")));
                break;
            case "ERRO":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/ERRO.png")));
                break;
            case "SUCESSO":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/SUCESSO.png")));
                break;
            case "AJUDA":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/AJUDA.png")));
                break;
            case "GORJETA":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/GORJETA.png")));
                break;
            case "PEDIDO_DE_ENTRADA":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/PEDIDO_DE_ENTRADA.png")));
                break;
            case "FALHA":
                imagem1.setIcon(new ImageIcon(getClass().getResource("/Imagens96/FALHA.png")));
                break;

        }
        jTextPane1.setText(message);
    }
    //SETERES E GET

    /**
     * @return the STATUS
     */
    public String getSTATUS() {
        return STATUS;
    }

    /**
     * @param STATUS the STATUS to set
     */
    public void setSTATUS(String STATUS) {
        this.STATUS = STATUS;
    }

    /**
     * @return the ENTRADA
     */
    public String getENTRADA() {
        return ENTRADA;
    }

    /**
     * @param ENTRADA the ENTRADA to set
     */
    public void setENTRADA(String ENTRADA) {
        this.ENTRADA = ENTRADA;
    }

    /**
     * SALVA SE DESA OU NÃO EXIBIR ALERTAS
     */
    public void escreve() {
        //inicia a leitura dos arquivos
        File file = new File(arquivoconexao);
        if (!file.exists()) {
            file.mkdir();
        }
        Properties properties = new Properties();
        try {
            FileInputStream fis = new FileInputStream(file);
            properties.load(fis);
        } catch (IOException e) {
            e.printStackTrace();
        }

        //fim da leitura do arquivo
        //altera a propriedade    
        try {
            if (jCheckBox1.isSelected()) {
                properties.setProperty("alertas", "true");
            } else {
                properties.setProperty("alertas", "false");
            }
            //salva o novo arquivo
            FileOutputStream fos = new FileOutputStream(file);
            properties.store(fos, "Sistema PDV:");

            fos.close();
        } catch (Exception e) {
            jDialogMensagem = new JDialogMensagem(null, true);
            jDialogMensagem.showMessage("Error", "Error:" + e, "ERRO", "PADRAO");
            jDialogMensagem.setVisible(true);
        }

    }

    /**
     * recupera o status de exibição de alertas
     */
    public void lerconfiguracao() {
        File file = new File(arquivoconexao);

        try {
            File pacote = new File(System.getProperty("user.dir") + "/" + arquivoconexao);
            pacote.mkdir();
            FileInputStream fis = new FileInputStream(file);
            Properties properties = new Properties();
            properties.load(fis);

            jCheckBox1.setSelected(
                    Boolean.parseBoolean(
                            properties.getProperty("alertas")
                    )
            );
        } catch (IOException e) {
            jDialogMensagem = new JDialogMensagem(null, true);
            jDialogMensagem.showMessage("Error", "Comportamento anormal ao tentar abrir o arquivo.\n error: " + e, "ERRO", "PADRAO");
            jDialogMensagem.setVisible(true);
        }
    }
}
